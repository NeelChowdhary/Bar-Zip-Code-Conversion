#include <iostream>
#include <string>
#include <cmath>
using namespace std;

string bar(int zipDigit){
    const int barsPerDigit = 5;
    string bars = "||::::::||::|:|::||::|::|:|:|::||::|:::||::|:|:|::";
    string bar = bars.substr(zipDigit * barsPerDigit, barsPerDigit);
    return bar;
}

int getIthDigit(int zipcode, int i){
    int iDigits = zipcode % static_cast<int>(pow(10, i));
    int zipDigit = static_cast<int>(iDigits / pow(10, i - 1));
    return zipDigit;
}

string zip2bar(int zipcode){
    const char FRAME_BAR = '|';
    string barcode = "";
    
    if (zipcode < 10001 || zipcode > 99929){
        cout << "Invalid zipcode. Returning empty string." << endl;
        return barcode;
    }
    
    int digitSum = 0;
    int ithDigit = 0;
    for (int i = 5; i > 0; i--){
        ithDigit = getIthDigit(zipcode, i);
        digitSum += ithDigit;
        barcode += bar(ithDigit);
    }
    
    int checkDigit = 0;
    if (digitSum % 10 > 0){
        checkDigit = 10 - (digitSum % 10);
    }
    barcode += bar(checkDigit);
    barcode = FRAME_BAR + barcode + FRAME_BAR;
    
    return barcode;
}

int getDigit(string bar){
    const int weight1 = 7;
    const int weight2 = 4;
    const int weight3 = 2;
    const int weight4 = 1;
    const int weight5 = 0;
    bool bar1 = bar[0] == '|';
    bool bar2 = bar[1] == '|';
    bool bar3 = bar[2] == '|';
    bool bar4 = bar[3] == '|';
    bool bar5 = bar[4] == '|';
    
    int zipDigit = weight1*bar1 + weight2*bar2 + weight3*bar3 + weight4*bar4 + weight5*bar5;
    if (zipDigit == 11){
        zipDigit = 0;
    }
    return zipDigit;
}

int bar2zip(string barcode){
    const int BARS_PER_DIGIT = 5;
    const int BAR_CODE_LENGTH = 32;
    const char FRAME_BAR = '|';
    const int NUM_DIGITS = 6;
    
    char firstBar = barcode[0];
    char lastBar = barcode[barcode.length() - 1];
    
    if (firstBar != FRAME_BAR || lastBar != FRAME_BAR){
        cout << "Invalid barcode: missing frame bar. Returning 0." << endl;
        return 0;
    }
    
    if (barcode.length() != BAR_CODE_LENGTH){
        cout << "Invalid barcode: incorrect length. Returning 0." << endl;
        return 0;
    }
    
    int zipcode = 0;
    int digitSum = 0;
    
    for (int i = 0; i < NUM_DIGITS; i++){
        string bar = barcode.substr(i*BARS_PER_DIGIT + 1, BARS_PER_DIGIT);
        int zipDigit = getDigit(bar);
        digitSum += zipDigit;
        if (i + 1 < NUM_DIGITS){
            zipcode += zipDigit * pow(10, NUM_DIGITS - 2 - i);
        }
    }
    
    if ((digitSum % 10) != 0){
        cout << "Checksum failed. Invalid barcode. Returning 0." << endl;
        zipcode = 0;
    }
    
    return zipcode;
}

int main(){
    const int startCode = 10001;
    const int endCode = 99929;
    const int numCodes = endCode - startCode + 1;
    int numTested = 0;
    int numSuccess = 0;
    int zipcode2 = 0;
    string bar;
    
    for (int zipcode = startCode; zipcode <= endCode; zipcode++){
        bar = zip2bar(zipcode);
        zipcode2 = bar2zip(bar);
        if (zipcode == zipcode2){
            numSuccess++;
        }
        numTested = zipcode - startCode + 1;
        if (numTested % 5000 == 0){
            cout << numTested << " codes tested..." << endl;
        }
        
    }
    double percentSuccess = static_cast<double>(numSuccess) / numCodes * 100;
    cout << "Success rate: " << percentSuccess << "%" << endl;
    return 0;
}
